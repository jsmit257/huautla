---

event:
  all-by-lifecycle: >
    select e.uuid,
           e.temperature,
           e.humidity,
           e.mtime,
           e.ctime,
           et.uuid as eventtype_uuid,
           et.name as eventtype_name,
           s.uuid as stage_uuid,
           s.name as stage_name
      from events e
      join event_types et
        on e.eventtype_uuid = et.uuid
      join stages s
        on et.stage_uuid = s.uuid
     where lifecycle_uuid = ?
     order
        by mtime
  all-by-eventtype:
    select e.uuid,
           e.temperature,
           e.humidity,
           e.mtime,
           e.ctime,
           et.uuid as eventtype_uuid,
           et.name as eventtype_name,
           s.uuid as stage_uuid,
           s.name as stage_name
      from events e
      join event_types et
        on e.eventtype_uuid = et.uuid
      join stages s
        on et.stage_uuid = s.uuid
     where e.uuid = ?
  select: >
    select e.temperature,
           e.humidity,
           e.mtime,
           e.ctime,
           et.uuid as eventtype_uuid,
           et.name as eventtype_name,
           s.uuid as stage_uuid,
           s.name as stage_name
      from events e
      join event_types et
        on e.eventtype_uuid = et.uuid
      join stages s
        on et.stage_uuid = s.uuid
     where e.uuid = ?
  add: >
    insert
      into event(uuid, temperature, humidity, mtime, ctime, lifecycle_uuid, eventtype_uuid)
    select ?, ?, ?, ?, ?, l.uuid, et.uuid
      from lifecycle l,
           eventtype et
     where l.uuid = ?
       and et.uuid = ?
  change: >
    update event
       set temperature = ?,
           humidity = ?,
           mtime = ?,
           eventtype_uuid = et.uuid
      from eventtype et
     where event.uuid = ?
       and et.uuid = ?
  remove: delete from event where uuid = ?

eventtype:
  select-all: >
    select e.uuid,
           e.name,
           s.uuid as stage_uuid,
           s.name as stage_name
      from event_types e
      join stages s
        on e.stage_uuid = s.uuid
  select:
    select e.name,
           s.uuid as stage_uuid,
           s.name as stage_name
      from event_types e
      join stages s
        on e.stage_uuid = s.uuid
     where e.uuid = ?
  insert: >
    insert
      into eventtype(uuid, name, stage_uuid)
    select ?,
           ?,
           s.uuid
      from stage s
     where s.uuid = ?
  update: update eventtype set name = ? where uuid = ?
  delete: delete from eventtype where uuid = ?

ingredient:
  select-all: select uuid, name from ingredients order by name
  select: select name from ingredients where uuid = ?
  insert: insert into ingredients(uuid, name) values(?, ?)
  update: update ingredients set name = ? where uuid = ?
  delete: delete from ingredients where uuid = ?

lifecycle:
  # it's an ugly, bad precedent, except that it saves a lot of hits to the db
  select: >
    select lc.name,
           lc.location,
           lc.grain_cost,
           lc.bulk_cost,
           lc.yield,
           lc.headcount,
           lc.gross,
           lc.mtime,
           lc.ctime,
           s.uuid as strain_uuid,
           s.name as strain_name,
           sv.uuid as strain_vendor_uuid,
           sv.name as strain_vendor_name,
           gs.uuid as grain_substrate_uuid,
           gs.name as grain_substrate_name,
           gs.type as grain_substrate_type,
           gv.uuid as grain_vendor_uuid,
           gv.name as grain_vendor_name,
           bs.uuid as bulk_substrate_uuid,
           bs.name as bulk_substrate_name,
           bs.type as bulk_substrate_type,
           bv.uuid as bulk_vendor_uuid,
           bv.name as bulk_vendor_name
      from lifecycles lc
      join strains s
        on lc.strain_uuid = s.uuid
      join vendors sv
        on s.vendor_uuid = sv.uuid
      join substrates gs
        on lc.grainsubstrate_uuid = gs.uuid
      join vendors gv
        on gs.vendor_uuid = gv.uuid
      join substrates bs
        on lc.bulksubstrate_uuid = bs.uuid
      join vendors bv
        on bs.vendor_uuid = bv.uuid
     where uuid = ?
  insert: >
    insert
      into lifecycle(
            uuid,
            name,
            location,
            graincost,
            bulkcost,
            yield,
            count,
            gross,
            mtime,
            ctime,
            strain_uuid,
            grainsubstrate_uuid,
            bulksubstrate_uuid)
    select ?,
           ?,
           ?,
           ?,
           ?,
           ?,
           ?,
           ?,
           ?,
           s.uuid,
           gs.uuid,
           bs.uuid
      from strain s,
           substrate gs,
           substrate bs
     where s.uuid = ?
       and gs.uuid = ?
       and bs.uuid = ?
  update: >
    update lifecycle
       set name = ?,
           location = ?,
           graincost = ?,
           bulkcost = ?,
           yield = ?,
           count = ?,
           gross = ?,
           mtime = ?,
           ctime = ?,
           strain_uuid = s.uuid,
           grain_uuid = gs.uuid,
           bulk_uuid = bs.uuid,
      from strain s,
           substrate gs,
           substrate bs
     where s.uuid = ?
       and gs.uuid = ?
       and bs.uuid = ?
  delete: delete from lifecycle where uuid = ?

stage:
  select-all: select uuid, name from stages order by name
  select: select name from stages where uuid = ?
  insert: insert into stages(uuid, name) values(?, ?)
  update: update stages set name = ? where uuid = ?
  delete: delete from stages where uuid = ?

strain:
  select-all: >
    select s.name,
           v.uuid as vendor_uuid,
           v.name as vendor_name
      from strains s
      join vendors v
        on s.vendor_uuid = v.uuid
     order
        by s.name
  select: >
    select s.name,
           v.uuid as vendor_uuid,
           v.name as vendor_name
      from strains s
      join vendors v
        on s.vendor_uuid = v.uuid
     where s.uuid = ?
  insert: >
    insert
      into strains(uuid, name, vendor_uuid)
    select ?, ?, v.uuid
      from vendors v
     where vendor_uuid = ?
  update: update strains set name = ? where uuid = ?
  delete: delete from strains where uuid = ?

strainattribute:
  get-unique-names: select distinct name from strain_attributes order by name
  all: >
    select uuid, name, value
      from strain_attributes sa
     where strain_uuid = ?
  add: >
    insert
      into strainattributes (uuid, name, value, strain_uuid)
    select ?, ?, ?, s.uuid
      from strain s
     where s.uuid = ?
  change: >
    update strainattributes
       set value = ?
      from strain s
     where strainattributes.name = ?
       and s.uuid = ?
  remove: >
    delete from strainattributes where uuid = ?

substrate-ingredient:
  all: >
    select i.uuid,
           i.name
      from ingredients i
      join substrate_ingredients si
        on i.uuid = si.ingredient_uuid
     where si.substrate_uuid = ?
  add: >
    insert
    into substrate_ingredients (uuid, substrate_uuid, ingredient_uuid)
    select ?, s.uuid, i.uuid
      from substrates s,
           ingredient i
     where s.uuid = ?
       and i.uuid = ?
  change: >
    update substrate_ingredients
       set ingredient_uuid = ?
     where substrate_uuid = ?
       and ingredient_uuid = ?
  remove: >
    delete
      from substrate_ingredients
     where substrate_uuid = ?
       and ingredient_uuid = ?

substrate:
  select-all: >
    select s.name,
           v.uuid as vendor_uuid,
           v.name as vendor_name
      from substrates s
      join vendors v
        on s.vendor_uuid = v.uuid
     order
        by s.name
  select: >
    select s.name,
           v.uuid as vendor_uuid,
           v.name as vendor_name
      from substrates s
      join vendors v
        on s.vendor_uuid = v.uuid
     where s.uuid = ?
  insert: >
    insert
      into substrates(uuid, name, vendor_uuid)
    select ?, ?, v.uuid
      from vendors v
     where vendor_uuid = ?
  update: update substrates set name = ? where uuid = ?
  delete: delete from substrates where uuid = ?

vendor:
  select-all: select uuid, name from vendors order by name
  select: select name from vendors where uuid = ?
  insert: insert into vendors(uuid, name) values(?, ?)
  update: update vendors set name = ? where uuid = ?
  delete: delete from vendors where uuid = ?
